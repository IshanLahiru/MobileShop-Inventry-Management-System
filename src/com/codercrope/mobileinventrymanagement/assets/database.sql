-- MySQL Script generated by MySQL Workbench
-- Mon Nov  7 17:23:03 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`batch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`batch` (
    `batch-id` VARCHAR(20) NOT NULL,
    `batch-dtl` VARCHAR(512) NOT NULL,
    `date-time` DATETIME NOT NULL,
    PRIMARY KEY (`batch-id`))
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`administrative-dtl`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`administrative-dtl` (
    `administrative-dtl-id` VARCHAR(20) NOT NULL,
    `administrative-stats` VARCHAR(45) NOT NULL,
    PRIMARY KEY (`administrative-dtl-id`))
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`employee` (
    `employee-id` VARCHAR(20) NOT NULL,
    `administrative-dtl_administrative-dtl-id` VARCHAR(20) NOT NULL,
    `full-name` VARCHAR(45) NOT NULL,
    `birthday` DATE NOT NULL,
    `address` VARCHAR(45) NOT NULL,
    `pwd` VARCHAR(45) NOT NULL,
    `email` VARCHAR(45) NOT NULL,
    `employee-dtl` JSON NULL,
    PRIMARY KEY (`employee-id`),
    INDEX `fk_employee_administrative-dtl1_idx` (`administrative-dtl_administrative-dtl-id` ASC) VISIBLE,
    CONSTRAINT `fk_employee_administrative-dtl1`
    FOREIGN KEY (`administrative-dtl_administrative-dtl-id`)
    REFERENCES `mydb`.`administrative-dtl` (`administrative-dtl-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`payment` (
    `payment-id` VARCHAR(20) NOT NULL,
    `employee_employee-id` VARCHAR(20) NOT NULL,
    `payment-amount` DECIMAL(8,2) NOT NULL,
    `payment-date-time` DATETIME NOT NULL,
    PRIMARY KEY (`payment-id`, `employee_employee-id`),
    INDEX `fk_payment_employee1_idx` (`employee_employee-id` ASC) VISIBLE,
    CONSTRAINT `fk_payment_employee1`
    FOREIGN KEY (`employee_employee-id`)
    REFERENCES `mydb`.`employee` (`employee-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`online-orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`online-orders` (
    `order-id` VARCHAR(20) NOT NULL,
    `batch_batch-id` VARCHAR(20) NOT NULL,
    `payment_payment-id` VARCHAR(20) NOT NULL,
    `employee_idemployee-id` VARCHAR(20) NOT NULL,
    `date-time` DATETIME NOT NULL,
    `online-orders-links` JSON NOT NULL,
    PRIMARY KEY (`order-id`, `payment_payment-id`, `employee_idemployee-id`),
    INDEX `fk_online-orders_batch1_idx` (`batch_batch-id` ASC) VISIBLE,
    INDEX `fk_online-orders_payment1_idx` (`payment_payment-id` ASC) VISIBLE,
    INDEX `fk_online-orders_employee1_idx` (`employee_idemployee-id` ASC) VISIBLE,
    CONSTRAINT `fk_online-orders_batch1`
    FOREIGN KEY (`batch_batch-id`)
    REFERENCES `mydb`.`batch` (`batch-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_online-orders_payment1`
    FOREIGN KEY (`payment_payment-id`)
    REFERENCES `mydb`.`payment` (`payment-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_online-orders_employee1`
    FOREIGN KEY (`employee_idemployee-id`)
    REFERENCES `mydb`.`employee` (`employee-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`warranty-type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`warranty-type` (
    `warranty-type-id` VARCHAR(20) NOT NULL,
    `warranty-duration` VARCHAR(8) NOT NULL,
    `warranty-cost` VARCHAR(45) NOT NULL,
    `warranty-type-dtl` JSON NULL,
    PRIMARY KEY (`warranty-type-id`))
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`warrenty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`warrenty` (
    `warranty-id` VARCHAR(20) NOT NULL,
    `warranty-type_warranty-type-id` VARCHAR(20) NOT NULL,
    PRIMARY KEY (`warranty-id`),
    INDEX `fk_warrenty_warranty-type1_idx` (`warranty-type_warranty-type-id` ASC) VISIBLE,
    CONSTRAINT `fk_warrenty_warranty-type1`
    FOREIGN KEY (`warranty-type_warranty-type-id`)
    REFERENCES `mydb`.`warranty-type` (`warranty-type-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`item` (
    `item-id` VARCHAR(20) NOT NULL,
    `warrenty_warranty` VARCHAR(20) NOT NULL,
    `item-name` VARCHAR(45) NOT NULL,
    `item-added-date-time` DATETIME NOT NULL,
    `ite-price-stock` DECIMAL(8,2) NOT NULL,
    `profit-percentage` INT NOT NULL,
    `itm-dtl` JSON NULL,
    PRIMARY KEY (`item-id`),
    INDEX `fk_item_warrenty1_idx` (`warrenty_warranty` ASC) VISIBLE,
    CONSTRAINT `fk_item_warrenty1`
    FOREIGN KEY (`warrenty_warranty`)
    REFERENCES `mydb`.`warrenty` (`warranty-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`batch_has_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`batch_has_item` (
    `batch_batch-id` VARCHAR(20) NOT NULL,
    `item_item-id` VARCHAR(20) NOT NULL,
    PRIMARY KEY (`batch_batch-id`, `item_item-id`),
    INDEX `fk_batch_has_item_item1_idx` (`item_item-id` ASC) VISIBLE,
    INDEX `fk_batch_has_item_batch_idx` (`batch_batch-id` ASC) VISIBLE,
    CONSTRAINT `fk_batch_has_item_batch`
    FOREIGN KEY (`batch_batch-id`)
    REFERENCES `mydb`.`batch` (`batch-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_batch_has_item_item1`
    FOREIGN KEY (`item_item-id`)
    REFERENCES `mydb`.`item` (`item-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cust-payment-type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cust-payment-type` (
    `cust-payment-type-id` VARCHAR(20) NOT NULL,
    `payment-type` VARCHAR(45) NOT NULL,
    `descreption` VARCHAR(100) NOT NULL,
    `cust-payment-dtl` JSON NULL,
    PRIMARY KEY (`cust-payment-type-id`, `payment-type`))
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cust-order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cust-order` (
    `order-id` VARCHAR(20) NOT NULL,
    `cust-payment-type_cust-payment-type-id` VARCHAR(20) NOT NULL,
    `employee_id` VARCHAR(20) NOT NULL,
    `date-time` DATETIME NOT NULL,
    `cust-payment-stats` VARCHAR(45) NOT NULL,
    `cust-order-dtl` JSON NULL,
    PRIMARY KEY (`order-id`, `employee_id`),
    INDEX `fk_order_cust-payment-type1_idx` (`cust-payment-type_cust-payment-type-id` ASC) VISIBLE,
    INDEX `fk_cust-order_employee1_idx` (`employee_id` ASC) VISIBLE,
    CONSTRAINT `fk_order_cust-payment-type1`
    FOREIGN KEY (`cust-payment-type_cust-payment-type-id`)
    REFERENCES `mydb`.`cust-payment-type` (`cust-payment-type-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_cust-order_employee1`
    FOREIGN KEY (`employee_id`)
    REFERENCES `mydb`.`employee` (`employee-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cust-order_has_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cust-order_has_item` (
    `cust-order_order-id` VARCHAR(20) NOT NULL,
    `item_item-id` VARCHAR(20) NOT NULL,
    `qty` DOUBLE NULL,
    PRIMARY KEY (`cust-order_order-id`, `item_item-id`),
    INDEX `fk_order_has_item_item1_idx` (`item_item-id` ASC) VISIBLE,
    INDEX `fk_order_has_item_order1_idx` (`cust-order_order-id` ASC) VISIBLE,
    CONSTRAINT `fk_order_has_item_order1`
    FOREIGN KEY (`cust-order_order-id`)
    REFERENCES `mydb`.`cust-order` (`order-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_order_has_item_item1`
    FOREIGN KEY (`item_item-id`)
    REFERENCES `mydb`.`item` (`item-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cust-payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cust-payment` (
    `idcust-payment-id` VARCHAR(20) NOT NULL,
    `cust-order_order-id` VARCHAR(20) NOT NULL,
    `cust-order_employee_idemployee-id` VARCHAR(20) NOT NULL,
    `payment` DECIMAL(8,2) NOT NULL,
    PRIMARY KEY (`idcust-payment-id`, `cust-order_order-id`, `cust-order_employee_idemployee-id`),
    INDEX `fk_cust-payment_cust-order1_idx` (`cust-order_order-id` ASC, `cust-order_employee_idemployee-id` ASC) VISIBLE,
    CONSTRAINT `fk_cust-payment_cust-order1`
    FOREIGN KEY (`cust-order_order-id` , `cust-order_employee_idemployee-id`)
    REFERENCES `mydb`.`cust-order` (`order-id` , `employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`employee_manage_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`employee_manage_item` (
    `employee_employee-id` VARCHAR(20) NOT NULL,
    `item_item-id` VARCHAR(20) NOT NULL,
    `managed-date-time` DATETIME NOT NULL,
    PRIMARY KEY (`employee_employee-id`, `item_item-id`),
    INDEX `fk_employee_has_item_item1_idx` (`item_item-id` ASC) VISIBLE,
    INDEX `fk_employee_has_item_employee1_idx` (`employee_employee-id` ASC) VISIBLE,
    CONSTRAINT `fk_employee_has_item_employee1`
    FOREIGN KEY (`employee_employee-id`)
    REFERENCES `mydb`.`employee` (`employee-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_employee_has_item_item1`
    FOREIGN KEY (`item_item-id`)
    REFERENCES `mydb`.`item` (`item-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cust-order_has_warrenty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cust-order_has_warrenty` (
    `cust-order_order-id` VARCHAR(20) NOT NULL,
    `cust-order_employee_id` VARCHAR(20) NOT NULL,
    `warrenty_warranty-id` VARCHAR(20) NOT NULL,
    `date_time` DATETIME NOT NULL,
    PRIMARY KEY (`cust-order_order-id`, `cust-order_employee_id`, `warrenty_warranty-id`),
    INDEX `fk_cust-order_has_warrenty_warrenty1_idx` (`warrenty_warranty-id` ASC) VISIBLE,
    INDEX `fk_cust-order_has_warrenty_cust-order1_idx` (`cust-order_order-id` ASC, `cust-order_employee_id` ASC) VISIBLE,
    CONSTRAINT `fk_cust-order_has_warrenty_cust-order1`
    FOREIGN KEY (`cust-order_order-id` , `cust-order_employee_id`)
    REFERENCES `mydb`.`cust-order` (`order-id` , `employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_cust-order_has_warrenty_warrenty1`
    FOREIGN KEY (`warrenty_warranty-id`)
    REFERENCES `mydb`.`warrenty` (`warranty-id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
